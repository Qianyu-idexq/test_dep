# This is a basic workflow to help you get started with Actions

name: dev_workflow
on:
  workflow_dispatch: 
env:
  project: 'ARR'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dbt_docs_update:
    runs-on: ubuntu-latest
    permissions: write-all
    environment: dev
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with: 
          ref: 'main'
      - name: Install dependencies
        working-directory: ./dbt
        run: |
            pip install dbt-databricks
            dbt deps
      - name: generate docs
        working-directory: ./dbt
        run: |
            dbt docs generate --profiles-dir .
        env:
          DATABRICKS_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.APP_SECRET }}
          DATABRICKS_HOST: ${{ secrets.SERVER_HOST }}
          DATABRICKS_SQL: ${{ secrets.WAREHOUSE_ID }}
      - run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add *
            git status
            if ! git diff-index --quiet HEAD; then
              git commit -m "generate dbt docs"
              git status
              git push
            fi
  
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions: write-all
    environment: dev
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
  DEV_workflow_deployment:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    environment: dev
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        #with: 
        #  ref: 'main'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.workspace }}/deployment/requirements.txt
      - name: Run Script
        run: |
          python ${{ github.workspace }}/deployment/script/databricks.py ${{ secrets.SERVER_HOST }} ${{ secrets.DATABRICKS_TOKEN }} \
          '' ${{ github.workspace }} ${{ env.project }} ${{ vars.ENV }} ${{ secrets.WAREHOUSE_ID }} ${{ secrets.APP_SECRET }} ${{ secrets.CLIENT_ID }}
  
